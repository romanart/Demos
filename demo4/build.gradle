
buildscript {
    ext.kotlin_version = '1.3.10'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.37"
    }
}

apply plugin: 'com.moowork.node'
apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
//apply plugin: 'org.jetbrains.kotlin.frontend'

group 'KUG'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.0.1"
    compile "org.jetbrains.kotlinx:kotlinx-html-js:0.6.8"
    testCompile "org.jetbrains.kotlin:kotlin-test-js"
}

compileKotlin2Js {
//    kotlinOptions.moduleKind = "commonjs"
    kotlinOptions.sourceMap = true
    kotlinOptions.metaInfo = true
    kotlinOptions.main = "call"
}


task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

build.dependsOn populateNodeModules

node {
    download = true
}


task copyWeb(type: Copy, dependsOn: [runDceKotlinJs, populateNodeModules]) {
    from "src/main/web"
    into "$buildDir/kotlin-js-min/main"
//    into "$buildDir/classes/kotlin/main"
}


assemble.dependsOn += copyWeb

//bundle.dependsOn += copyWeb
//
//kotlinFrontend {
//    downloadNodeJsVersion = "latest"
//    webpackBundle {
//        bundleName = "main"
////        contentPath = file("$buildDir/kotlin-js-min/main")
////        contentPath = file("$buildDir/bundle")
//        contentPath = file("$buildDir/classes/kotlin/main")
//        publicPath = "/"  // web prefix
//        host = "localhost" // dev server host
//        port = 7077   // dev server port
////        stats = "errors-only"  // log level
////        bundlePath = file("$buildDir/bundle/main.bundle.js")
//        mode = 'production'
//    }
//
//    define "PRODUCTION", false
//    define "X", false
//}